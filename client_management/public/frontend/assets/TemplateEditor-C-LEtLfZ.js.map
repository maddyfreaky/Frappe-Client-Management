{"version":3,"file":"TemplateEditor-C-LEtLfZ.js","sources":["../../../../frontend/src/pages/TemplateEditor.vue"],"sourcesContent":["<template>\r\n  <div class=\"max-w-3xl mx-auto p-6\">\r\n    \r\n    <div v-if=\"loading && !formData.template_name\" class=\"text-center py-8\">\r\n      Loading template data...\r\n    </div>\r\n\r\n    \r\n    <div v-if=\"errorMessage\" class=\"mb-4 p-4 bg-red-100 text-red-700 rounded-md\">\r\n      {{ errorMessage }}\r\n    </div>\r\n\r\n    \r\n    <div v-if=\"showSuccess\" class=\"mb-4 p-4 bg-green-100 text-green-700 rounded-md\">\r\n      Template updated successfully!\r\n    </div>\r\n\r\n    \r\n    <div v-if=\"formData.template_name\" class=\"card\">\r\n      <h2 class=\"card-header\">Edit Template</h2>\r\n      <form @submit.prevent=\"submitForm\" class=\"card-body\">\r\n        \r\n        <Input\r\n          label=\"Template Name\"\r\n          v-model=\"formData.template_name\"\r\n          type=\"text\"\r\n          required\r\n          class=\"mb-4\"\r\n        />\r\n\r\n        \r\n        <div v-for=\"(task, index) in formData.tasks\" :key=\"index\" class=\"card mb-4 relative\">\r\n          <div v-if=\"index > 0\" class=\"absolute top-2 right-2\">\r\n            <Button @click=\"removeTask(index)\" variant=\"ghost\" size=\"sm\">\r\n              Remove\r\n            </Button>\r\n          </div>\r\n          \r\n          <h3 class=\"card-header\">Task {{ index + 1 }}</h3>\r\n          <div class=\"card-body\">\r\n            <\r\n            <div v-if=\"index > 0\" class=\"mb-4\">\r\n              <Checkbox\r\n                v-model=\"task.is_child\"\r\n                @change=\"handleChildToggle(task)\"\r\n                label=\"Is Child Task\"\r\n              />\r\n            </div>\r\n\r\n            \r\n            <div v-if=\"task.is_child\" class=\"mb-4\">\r\n              <Select\r\n                v-model=\"task.parent_task\"\r\n                :options=\"[\r\n                  { label: 'Select Parent Task', value: '' },\r\n                  ...availableParentTasks(index).map((parent, parentIndex) => ({\r\n                    label: parent.task_name || `Task ${parentIndex + 1}`,\r\n                    value: parentIndex\r\n                  }))\r\n                ]\"\r\n                label=\"Parent Task\"\r\n                required\r\n              />\r\n            </div>\r\n\r\n            \r\n            <Input\r\n              label=\"Task Name\"\r\n              v-model=\"task.task_name\"\r\n              type=\"text\"\r\n              required\r\n              class=\"mb-4\"\r\n            />\r\n\r\n           \r\n            <Select\r\n              v-model=\"task.task_type\"\r\n              :options=\"[\r\n                { label: 'Select Task Type', value: '' },\r\n                { label: 'Internal', value: 'Internal' },\r\n                { label: 'Client', value: 'Client' }\r\n              ]\"\r\n              required\r\n              class=\"mb-4\"\r\n            />\r\n\r\n            \r\n            <Input\r\n              label=\"Complete Within Days\"\r\n              v-model=\"task.complete_within_days\"\r\n              type=\"number\"\r\n              min=\"1\"\r\n              required\r\n              class=\"mb-4\"\r\n            />\r\n\r\n            \r\n            <div class=\"grid grid-cols-2 gap-4 mb-4\">\r\n              <Input\r\n                label=\"From Date\"\r\n                v-model=\"task.from_date\"\r\n                type=\"date\"\r\n                :disabled=\"task.is_child\"\r\n                :required=\"!task.is_child\"\r\n              />\r\n              <Input\r\n                label=\"To Date\"\r\n                v-model=\"task.to_date\"\r\n                type=\"date\"\r\n                :disabled=\"task.is_child\"\r\n                :required=\"!task.is_child\"\r\n              />\r\n            </div>\r\n\r\n            \r\n            <Textarea\r\n              label=\"Description\"\r\n              v-model=\"task.description\"\r\n              rows=\"3\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        \r\n        <Button\r\n          type=\"button\"\r\n          @click=\"addTask\"\r\n          variant=\"outline\"\r\n          class=\"w-full mb-4\"\r\n        >\r\n          + Add Task\r\n        </Button>\r\n\r\n        \r\n        <div class=\"flex gap-3\">\r\n          <Button\r\n            type=\"button\"\r\n            @click=\"cancel\"\r\n            variant=\"outline\"\r\n            class=\"flex-1\"\r\n            :disabled=\"submitting\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"solid\"\r\n            theme=\"gray\"\r\n            class=\"flex-1\"\r\n            :loading=\"submitting\"\r\n          >\r\n            {{ submitting ? 'Updating...' : 'Update Template' }}\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport { useRoute, useRouter } from 'vue-router'\r\nimport { Input, Textarea, Button, createResource, Select, Checkbox } from 'frappe-ui'\r\n\r\nconst route = useRoute()\r\nconst router = useRouter()\r\n\r\nconst templateName = ref(route.params.name)\r\nconst formData = ref({\r\n  template_name: '',\r\n  tasks: []\r\n})\r\n\r\nconst loading = ref(true)\r\nconst submitting = ref(false)\r\nconst showSuccess = ref(false)\r\nconst errorMessage = ref('')\r\n\r\n// Fetch template data with child tasks\r\nonMounted(async () => {\r\n  await fetchTemplateWithTasks()\r\n})\r\n\r\nconst fetchTemplateWithTasks = async () => {\r\n  loading.value = true\r\n  try {\r\n    const resource = createResource({\r\n      url: 'frappe.client.get',\r\n      params: {\r\n        doctype: 'Template',\r\n        name: templateName.value,\r\n        fields: ['*'],\r\n        // Include child table fields\r\n        fields: ['name', 'template_name', 'tasks.task_name', 'tasks.task_type', \r\n                'tasks.complete_within_days', 'tasks.from_date', 'tasks.to_date',\r\n                'tasks.description', 'tasks.is_child', 'tasks.parent_task', 'tasks.name']\r\n      }\r\n    })\r\n    \r\n    const templateData = await resource.fetch()\r\n    \r\n    // Transform the data\r\n    formData.value = {\r\n      template_name: templateData.template_name,\r\n      tasks: templateData.tasks.map((task, index, tasksArray) => ({\r\n        name: task.name, // Keep the task name/id for reference\r\n        task_name: task.task_name,\r\n        task_type: task.task_type,\r\n        complete_within_days: task.complete_within_days,\r\n        from_date: task.from_date,\r\n        to_date: task.to_date,\r\n        description: task.description,\r\n        is_child: !!task.parent_task,\r\n        // Find the index of the parent task in the tasks array\r\n        parent_task: task.parent_task \r\n          ? tasksArray.findIndex(t => t.name === task.parent_task)\r\n          : null\r\n      }))\r\n    }\r\n    \r\n    if (formData.value.tasks.length === 0) {\r\n      formData.value.tasks.push(createEmptyTask())\r\n    }\r\n  } catch (error) {\r\n    errorMessage.value = error.message || 'Failed to load template data'\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n\r\nconst createEmptyTask = () => ({\r\n  name: '', \r\n  task_name: '',\r\n  task_type: '',\r\n  complete_within_days: 1,\r\n  from_date: '',\r\n  to_date: '',\r\n  description: '',\r\n  is_child: false,\r\n  parent_task: null\r\n})\r\n\r\n\r\nconst findParentTaskIndex = (tasks, parentTaskName) => {\r\n  const parentTask = tasks.find(t => t.task_name === parentTaskName)\r\n  return tasks.indexOf(parentTask)\r\n}\r\n\r\n// Add new task\r\nconst addTask = () => {\r\n  formData.value.tasks.push(createEmptyTask())\r\n}\r\n\r\n// Remove task\r\nconst removeTask = (index) => {\r\n  formData.value.tasks.splice(index, 1)\r\n}\r\n\r\n// Handle child task toggle\r\nconst handleChildToggle = (task) => {\r\n  if (task.is_child) {\r\n    task.from_date = ''\r\n    task.to_date = ''\r\n    task.parent_task = null\r\n  }\r\n}\r\n\r\n// Get available parent tasks\r\nconst availableParentTasks = (currentIndex) => {\r\n  return formData.value.tasks.slice(0, currentIndex)\r\n}\r\n\r\nconst submitForm = async () => {\r\n  submitting.value = true\r\n  showSuccess.value = false\r\n  errorMessage.value = ''\r\n  \r\n  try {\r\n    \r\n    const tasksToSubmit = formData.value.tasks.map((task, index) => {\r\n      const taskData = {\r\n        task_name: task.task_name,\r\n        task_type: task.task_type,\r\n        complete_within_days: task.complete_within_days,\r\n        description: task.description,\r\n        is_child: task.is_child || false,\r\n        parent_index: task.is_child ? parseInt(task.parent_task) : null // Ensure number\r\n      }\r\n\r\n      // Only include dates if not a child task\r\n      if (!task.is_child) {\r\n        taskData.from_date = task.from_date\r\n        taskData.to_date = task.to_date\r\n      }\r\n\r\n      return taskData\r\n    })\r\n\r\n    // Update the template with its tasks\r\n    const resource = createResource({\r\n      url: 'client_management.client_management.doctype.template.template.update_template_with_task',\r\n      method: 'POST',\r\n      params: {\r\n        template_name: templateName.value,\r\n        new_template_name: formData.value.template_name,\r\n        tasks: tasksToSubmit\r\n      }\r\n    })\r\n\r\n    await resource.submit()\r\n     \r\n    showSuccess.value = true\r\n    \r\n    \r\n    setTimeout(() => {\r\n      router.push({ name: 'TemplateList' })\r\n    }, 1500)\r\n\r\n  } catch (error) {\r\n    errorMessage.value = error.message || 'Failed to update template'\r\n  } finally {\r\n    submitting.value = false\r\n  }\r\n}\r\n\r\n\r\nconst cancel = () => {\r\n  router.go(-1)\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.card {\r\n  @apply bg-white rounded-lg shadow border border-gray-200;\r\n}\r\n.card-header {\r\n  @apply px-6 py-4 border-b border-gray-200 font-semibold text-lg;\r\n}\r\n.card-body {\r\n  @apply p-6;\r\n}\r\n</style>"],"names":["route","useRoute","router","useRouter","templateName","ref","formData","loading","submitting","showSuccess","errorMessage","onMounted","__async","fetchTemplateWithTasks","templateData","createResource","task","index","tasksArray","t","createEmptyTask","error","addTask","removeTask","handleChildToggle","availableParentTasks","currentIndex","submitForm","tasksToSubmit","taskData","cancel","_openBlock","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","_hoisted_4","_hoisted_5","_cache","_createElementVNode","_createVNode","_unref","Input","$event","_Fragment","_hoisted_6","Button","_hoisted_7","_hoisted_8","_hoisted_9","Checkbox","_hoisted_10","Select","parent","parentIndex","_hoisted_11","Textarea","_hoisted_12"],"mappings":"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"}