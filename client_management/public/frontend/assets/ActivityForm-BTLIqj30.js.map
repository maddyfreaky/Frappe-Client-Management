{"version":3,"file":"ActivityForm-BTLIqj30.js","sources":["../../../../frontend/src/pages/ActivityForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"max-w-3xl mx-auto p-6\">\r\n    \r\n    <div v-if=\"loading && !formData.template_name\" class=\"text-center py-8\">\r\n      Loading template data...\r\n    </div>\r\n\r\n    \r\n    <div v-if=\"errorMessage\" class=\"mb-4 p-4 bg-red-100 text-red-700 rounded-md\">\r\n      {{ errorMessage }}\r\n    </div>\r\n\r\n    <div v-if=\"showSuccess\" class=\"mb-4 p-4 bg-green-100 text-green-700 rounded-md\">\r\n      Activity created successfully!\r\n    </div>\r\n\r\n    \r\n <div v-if=\"formData.template_name\" class=\"card\">\r\n  <h2 class=\"card-header\">Create Activity from Template</h2>\r\n  <form @submit.prevent=\"submitForm\" class=\"card-body\">\r\n    \r\n    <!-- Activity Name -->\r\n    <Input\r\n      label=\"Activity Name\"\r\n      v-model=\"formData.template_name\"\r\n      type=\"text\"\r\n      class=\"mb-4\"\r\n      @blur=\"validateActivityName\"\r\n    />\r\n\r\n    <!-- Recurring Options -->\r\n    <div class=\"grid grid-cols-2 gap-4 mb-6\">\r\n      <div class=\"col-span-2\">\r\n        <Checkbox\r\n          v-model=\"formData.is_recurring\"\r\n          label=\"Is Recurring Activity\"\r\n          @change=\"handleRecurringChange\"\r\n        />\r\n      </div>\r\n      <div v-if=\"formData.is_recurring\" class=\"col-span-2\">\r\n        <Select\r\n          v-model=\"formData.recurring_day\"\r\n          :options=\"daysOfMonth\"\r\n          label=\"Select day of the month\"\r\n          required\r\n        />\r\n      </div>\r\n      <div class=\"col-span-2\">\r\n        <Select\r\n          v-model=\"formData.client\"\r\n          :options=\"clientOptions\"\r\n          label=\"Client\"\r\n          required\r\n          @change=\"handleClientChange($event.target.value)\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Tasks Loop -->\r\n    <div v-for=\"(task, index) in formData.tasks\" :key=\"index\" class=\"card mb-4 relative\">\r\n      <div v-if=\"index > 0\" class=\"absolute top-2 right-2\">\r\n        <Button @click=\"removeTask(index)\" variant=\"ghost\" size=\"sm\">\r\n          Remove\r\n        </Button>\r\n      </div>\r\n      \r\n      <h3 class=\"card-header\">Task {{ index + 1 }}</h3>\r\n      <div class=\"card-body\">\r\n        <!-- Child Task Options -->\r\n        <div v-if=\"index > 0\" class=\"mb-4\">\r\n          <Checkbox\r\n            v-model=\"task.is_child\"\r\n            @change=\"handleChildToggle(task)\"\r\n            label=\"Is Child Task\"\r\n          />\r\n        </div>\r\n\r\n        <!-- Parent Task Select -->\r\n        <div v-if=\"task.is_child\" class=\"mb-4\">\r\n          <Select\r\n            v-model=\"task.parent_task\"\r\n            :options=\"[\r\n              { label: 'Select Parent Task', value: null },\r\n              ...availableParentTasks(index).map((parent, parentIndex) => ({\r\n                label: parent.task_name || `Task ${parentIndex + 1}`,\r\n                value: parentIndex\r\n              }))\r\n            ]\"\r\n            label=\"Parent Task\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <!-- Hide from Client Checkbox -->\r\n        <div class=\"mb-4\">\r\n          <Checkbox\r\n            v-model=\"task.hide_to_client\"\r\n            label=\"Hide this task from client view\"\r\n          />\r\n        </div>\r\n\r\n        <!-- Task Name -->\r\n        <Input\r\n          label=\"Task Name\"\r\n          v-model=\"task.task_name\"\r\n          type=\"text\"\r\n          required\r\n          class=\"mb-4\"\r\n        />\r\n\r\n        <!-- FIRST ROW: 3 columns (Task Type, Assign To, Priority) -->\r\n        <div class=\"grid grid-cols-3 gap-4 mb-4\">\r\n          <!-- Task Type -->\r\n          <Select\r\n            v-model=\"task.task_type\"\r\n            :options=\"[\r\n              { label: 'Task Type', value: '' },\r\n              { label: 'Internal', value: 'Internal' },\r\n              { label: 'Client', value: 'Client' }\r\n            ]\"\r\n            required\r\n            @change=\"handleTaskTypeChange(index)\"\r\n          />\r\n\r\n          <!-- Assign To -->\r\n          <Select\r\n            v-model=\"task.assign_to\"\r\n            :options=\"getAssignToOptions(task.task_type)\"\r\n            label=\"Assign To\"\r\n            required\r\n          />\r\n\r\n          <!-- Priority -->\r\n          <Select\r\n            v-model=\"task.priority\"\r\n            :options=\"priorityOptions\"\r\n            label=\"Priority\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <!-- SECOND ROW: 3 columns (Complete Within Days, From Date, To Date) -->\r\n        <div class=\"grid grid-cols-3 gap-4 mb-4\">\r\n          <!-- Complete Within Days -->\r\n          <Input\r\n            label=\"Complete Within Days\"\r\n            v-model=\"task.complete_within_days\"\r\n            type=\"number\"\r\n            min=\"1\"\r\n            required\r\n          />\r\n\r\n          <!-- From Date -->\r\n          <Input\r\n            label=\"From Date\"\r\n            v-model=\"task.from_date\"\r\n            type=\"date\"\r\n            :disabled=\"task.is_child\"\r\n            :required=\"!task.is_child\"\r\n          />\r\n\r\n          <!-- To Date -->\r\n          <Input\r\n            label=\"To Date\"\r\n            v-model=\"task.to_date\"\r\n            type=\"date\"\r\n            :disabled=\"task.is_child\"\r\n            :required=\"!task.is_child\"\r\n          />\r\n        </div>\r\n\r\n        <!-- Description -->\r\n        <Textarea\r\n          label=\"Description\"\r\n          v-model=\"task.description\"\r\n          rows=\"3\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Add Task Button -->\r\n    <Button\r\n      type=\"button\"\r\n      @click=\"addTask\"\r\n      variant=\"outline\"\r\n      class=\"w-full mb-4\"\r\n    >\r\n      + Add Task\r\n    </Button>\r\n\r\n    <!-- Form Actions -->\r\n    <div class=\"flex gap-3\">\r\n      <Button\r\n        type=\"button\"\r\n        @click=\"cancel\"\r\n        variant=\"outline\"\r\n        class=\"flex-1\"\r\n        :disabled=\"submitting\"\r\n      >\r\n        Cancel\r\n      </Button>\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"solid\"\r\n        theme=\"gray\"\r\n        class=\"flex-1\"\r\n        :loading=\"submitting\"\r\n      >\r\n        {{ submitting ? 'Creating...' : 'Create Activity' }}\r\n      </Button>\r\n    </div>\r\n  </form>\r\n</div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport { useRoute, useRouter } from 'vue-router'\r\nimport { Input, Textarea, Button, createResource, Select, Checkbox } from 'frappe-ui'\r\n\r\nconst route = useRoute()\r\nconst router = useRouter()\r\n\r\nconst formData = ref({\r\n  template_name: '',\r\n  is_recurring: false,\r\n  recurring_day: null,\r\n  client: '',\r\n  tasks: []\r\n})\r\n\r\n\r\nconst daysOfMonth = Array.from({length: 31}, (_, i) => ({\r\n  label: (i + 1).toString(),\r\n  value: i + 1\r\n}))\r\n\r\nconst priorityOptions = [\r\n  { label: 'Low', value: 'Low' },\r\n  { label: 'Medium', value: 'Medium' },\r\n  { label: 'High', value: 'High' }\r\n]\r\n\r\nconst clientOptions = ref([{ label: 'Select Client', value: '' }])\r\nconst clientUsers = ref([])\r\nconst internalUsers = ref([])\r\n\r\nconst loading = ref(true)\r\nconst submitting = ref(false)\r\nconst showSuccess = ref(false)\r\nconst errorMessage = ref('')\r\n\r\n// Fetch template data with child tasks\r\nonMounted(async () => {\r\n  try {\r\n    await Promise.all([\r\n      fetchTemplateWithTasks(),\r\n      fetchClients(),\r\n      fetchInternalUsers()\r\n    ])\r\n  } catch (error) {\r\n    errorMessage.value = 'Initialization failed: ' + (error.message || 'Unknown error')\r\n  }\r\n})\r\n\r\nconst fetchTemplateWithTasks = async () => {\r\n  loading.value = true\r\n  try {\r\n    const resource = createResource({\r\n      url: 'frappe.client.get',\r\n      params: {\r\n        doctype: 'Template',\r\n        name: route.params.templateName,\r\n        fields: ['*']\r\n      }\r\n    })\r\n    \r\n    const templateData = await resource.fetch()\r\n    \r\n    \r\n    const taskNameToIndex = {}\r\n    templateData.tasks.forEach((task, index) => {\r\n      taskNameToIndex[task.name] = index\r\n    })\r\n    \r\n    // Transform the data for our form\r\n    formData.value = {\r\n      template_name: templateData.template_name,\r\n      is_recurring: false,\r\n      recurring_day: null,\r\n      client: '',\r\n      tasks: templateData.tasks.map(task => ({\r\n        ...task,\r\n        is_child: !!task.parent_task,\r\n        // Find the index of the parent task in the tasks array\r\n        parent_task: task.parent_task ? taskNameToIndex[task.parent_task] : null,\r\n        assign_to: '',\r\n        priority: 'Medium'\r\n      }))\r\n    }\r\n    \r\n    if (formData.value.tasks.length === 0) {\r\n      formData.value.tasks.push(createEmptyTask())\r\n    }\r\n  } catch (error) {\r\n    errorMessage.value = error.message || 'Failed to load template data'\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// create an empty task\r\nconst createEmptyTask = () => ({\r\n  task_name: '',\r\n  task_type: '',\r\n  complete_within_days: 1,\r\n  from_date: '',\r\n  to_date: '',\r\n  description: '',\r\n  is_child: false,\r\n  parent_task: null,\r\n  assign_to: '',\r\n  priority: 'Medium',\r\n  hide_to_client: false\r\n})\r\n\r\n\r\nconst findParentTaskIndex = (tasks, parentTaskName) => {\r\n  const parentTask = tasks.find(t => t.name === parentTaskName)\r\n  return tasks.indexOf(parentTask)\r\n}\r\n\r\n// Fetch clients for select options\r\nconst fetchClients = async () => {\r\n  try {\r\n    const resource = createResource({\r\n      url: 'frappe.client.get_list',\r\n      params: {\r\n        doctype: 'ClientFormData',\r\n        fields: ['name', 'client_name']\r\n      }\r\n    });\r\n\r\n    const response = await resource.fetch();\r\n    console.log(\"Full response:\", response);\r\n\r\n    \r\n    const clients = response.message || response.result || (Array.isArray(response) ? response : []);\r\n\r\n    clientOptions.value = [\r\n      { label: 'Select Client', value: '' },\r\n      ...clients.map(client => ({\r\n        label: client.client_name,\r\n        value: client.name\r\n      }))\r\n    ];\r\n\r\n    console.log(\"Options:\", clientOptions.value);\r\n\r\n  } catch (error) {\r\n    console.error('Failed to load clients:', error);\r\n    errorMessage.value = 'Failed to load client list. Please check your permissions.';\r\n    clientOptions.value = [{ label: 'Failed to load clients', value: '' }];\r\n  }\r\n};\r\n\r\nconst validateActivityName = async () => {\r\n  if (!formData.value.template_name) return\r\n  \r\n  const nameExists = await checkActivityNameExists(formData.value.template_name)\r\n  if (nameExists) {\r\n    errorMessage.value = 'An activity with this name already exists. Please choose a different name.'\r\n  } else {\r\n    errorMessage.value = ''\r\n  }\r\n}\r\n\r\nconst checkActivityNameExists = async (activityName) => {\r\n  try {\r\n    const resource = createResource({\r\n      url: 'frappe.client.get_list',\r\n      params: {\r\n        doctype: 'Activity',\r\n        filters: [['activity_name', '=', activityName]],\r\n        limit: 1\r\n      }\r\n    })\r\n    \r\n    const response = await resource.fetch()\r\n    return response.length > 0\r\n  } catch (error) {\r\n    console.error('Error checking activity name:', error)\r\n    return false\r\n  }\r\n}\r\n// Fetch internal users (non-client role)\r\nconst fetchInternalUsers = async () => {\r\n  try {\r\n    const resource = createResource({\r\n      url: 'client_management.client_management.doctype.activity.activity.get_users_for_assignment',\r\n      method: 'GET'\r\n    })\r\n\r\n    const response = await resource.fetch()\r\n    console.log(response, \"Raw response\")\r\n\r\n    if (response.success) {\r\n      console.log(response.internal_users, \"users\")\r\n      internalUsers.value = response.internal_users.map(user => ({\r\n        label: user.full_name || user.name,\r\n        value: user.name\r\n      }))\r\n    } else {\r\n      console.log(\"Error in response\")\r\n      throw new Error(response.message || 'Failed to load users')\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('Failed to load internal users:', error)\r\n    errorMessage.value = 'Failed to load user list. Please check your permissions.'\r\n    internalUsers.value = [{ label: 'Failed to load users', value: '' }]\r\n  }\r\n}\r\n\r\n\r\nconst getUserRoles = async (userId) => {\r\n  const { data } = await createResource({\r\n    url: 'frappe.client.get_list',\r\n    params: {\r\n      doctype: 'Has Role',\r\n      fields: ['role'],\r\n      filters: [['parent', '=', userId]]\r\n    }\r\n  }).fetch()\r\n  return data.map(item => item.role)\r\n}\r\n\r\n// Handle client change to fetch client users\r\nconst handleClientChange = async (clientId) => {\r\n  if (!clientId) {\r\n    clientUsers.value = []\r\n    return\r\n  }\r\n\r\n  try {\r\n    const resource = createResource({\r\n      url: 'client_management.client_management.doctype.activity.activity.get_client_users',\r\n      method: 'POST',\r\n      params: { client_id: clientId }\r\n    })\r\n    \r\n    const response = await resource.fetch()\r\n    console.log(response, \"clientchange\")\r\n    if (response.success) {\r\n      clientUsers.value = response.users.map(user => ({\r\n        label: user.full_name || user.name,\r\n        value: user.name\r\n      }))\r\n    } else {\r\n      throw new Error(data.message || 'Failed to load client users')\r\n    }\r\n  } catch (error) {\r\n    console.error('Failed to load client users:', error)\r\n    errorMessage.value = 'Failed to load client users. Please check your permissions.'\r\n    clientUsers.value = [{ label: 'Failed to load client users', value: '' }]\r\n  }\r\n}\r\n\r\nconst getAssignToOptions = (taskType) => {\r\n  const options = [{ label: 'Select User', value: '' }]\r\n  \r\n  if (taskType === 'Internal') {\r\n    return [...options, ...internalUsers.value]\r\n  } else if (taskType === 'Client') {\r\n    return [...options, ...clientUsers.value]\r\n  }\r\n  \r\n  return options\r\n}\r\n\r\n\r\nconst handleTaskTypeChange = (index) => {\r\n  // Reset assign_to when task type changes\r\n  formData.value.tasks[index].assign_to = ''\r\n}\r\n\r\n// Handle recurring checkbox change\r\nconst handleRecurringChange = () => {\r\n  if (!formData.value.is_recurring) {\r\n    formData.value.recurring_day = null\r\n  }\r\n}\r\n\r\n// Handle child task toggle\r\nconst handleChildToggle = (task) => {\r\n  if (task.is_child) {\r\n    task.from_date = ''\r\n    task.to_date = ''\r\n    task.parent_task = null\r\n  }\r\n}\r\n\r\n\r\nconst availableParentTasks = (currentIndex) => {\r\n  return formData.value.tasks.slice(0, currentIndex)\r\n}\r\n\r\n\r\nconst addTask = () => {\r\n  formData.value.tasks.push(createEmptyTask())\r\n}\r\n\r\n\r\nconst removeTask = (index) => {\r\n  formData.value.tasks.splice(index, 1)\r\n}\r\n\r\nconst submitForm = async () => {\r\n  submitting.value = true\r\n  showSuccess.value = false\r\n  errorMessage.value = ''\r\n  \r\n  try {\r\n     if (!formData.value.template_name) {\r\n      errorMessage.value = 'Activity Name is required'\r\n      submitting.value = false\r\n      return\r\n    }\r\n    \r\n    const nameExists = await checkActivityNameExists(formData.value.template_name)\r\n    if (nameExists) {\r\n      errorMessage.value = 'An activity with this name already exists. Please choose a different name.'\r\n      submitting.value = false\r\n      return\r\n    }\r\n\r\n    \r\n    const tasksToSubmit = formData.value.tasks.map((task, index) => {\r\n      const taskData = {\r\n        task_name: task.task_name,\r\n        task_type: task.task_type,\r\n        complete_within_days: task.complete_within_days,\r\n        description: task.description,\r\n        is_child: task.is_child || false,\r\n        parent_index: task.is_child ? task.parent_task : null,\r\n        assign_to: task.assign_to,\r\n        priority: task.priority,\r\n        client: formData.value.client,\r\n        hide_to_client: task.hide_to_client || false,\r\n      }\r\n\r\n      \r\n      if (!task.is_child) {\r\n        taskData.from_date = task.from_date\r\n        taskData.to_date = task.to_date\r\n      }\r\n\r\n      return taskData\r\n    })\r\n\r\n    // Create the activity\r\n    const resource = createResource({\r\n      url: 'client_management.client_management.doctype.activity.activity.create_activity_from_template',\r\n      method: 'POST',\r\n      params: {\r\n        template_name: formData.value.template_name,\r\n        client: formData.value.client,\r\n        is_recurring: formData.value.is_recurring,\r\n        recurring_day: formData.value.recurring_day,\r\n        tasks: tasksToSubmit\r\n      }\r\n    })\r\n\r\n    await resource.submit()\r\n    \r\n    \r\n    showSuccess.value = true\r\n    \r\n    \r\n    setTimeout(() => {\r\n      router.push({ name: 'ActivityList' }) \r\n    }, 1500)\r\n\r\n  } catch (error) {\r\n    errorMessage.value = error.message || 'Failed to create activity'\r\n  } finally {\r\n    submitting.value = false\r\n  }\r\n}\r\n\r\n\r\nconst cancel = () => {\r\n  router.go(-1)\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.card {\r\n  @apply bg-white rounded-lg shadow border border-gray-200;\r\n}\r\n.card-header {\r\n  @apply px-6 py-4 border-b border-gray-200 font-semibold text-lg;\r\n}\r\n.card-body {\r\n  @apply p-6;\r\n}\r\n</style>"],"names":["route","useRoute","router","useRouter","formData","ref","daysOfMonth","_","i","priorityOptions","clientOptions","clientUsers","internalUsers","loading","submitting","showSuccess","errorMessage","onMounted","__async","fetchTemplateWithTasks","fetchClients","fetchInternalUsers","error","templateData","createResource","taskNameToIndex","task","index","__spreadProps","__spreadValues","createEmptyTask","response","clients","client","validateActivityName","checkActivityNameExists","activityName","user","handleClientChange","clientId","getAssignToOptions","taskType","options","handleTaskTypeChange","handleRecurringChange","handleChildToggle","availableParentTasks","currentIndex","addTask","removeTask","submitForm","tasksToSubmit","taskData","cancel","_openBlock","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","_hoisted_4","_hoisted_5","_cache","_createElementVNode","_createVNode","_unref","Input","$event","_hoisted_6","_hoisted_7","Checkbox","_hoisted_8","Select","_hoisted_9","_Fragment","_hoisted_10","Button","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","parent","parentIndex","_hoisted_15","_hoisted_16","_hoisted_17","Textarea","_hoisted_18"],"mappings":"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"}